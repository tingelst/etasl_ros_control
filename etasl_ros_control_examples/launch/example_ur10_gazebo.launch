<?xml version="1.0"?>
<launch>
    <arg name="limited" default="true" doc="If true, limits joint range [-PI, PI] on all joints." />
    <arg name="paused" default="true" doc="Starts gazebo in paused mode" />
    <arg name="gui" default="true" doc="Starts gazebo gui" />

    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" default="worlds/empty.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="gui" value="$(arg gui)"/>
    </include>

    <!-- send robot urdf to param server -->
    <include file="$(find ur_description)/launch/ur10_upload.launch">
        <arg name="limited" value="$(arg limited)"/>
    </include>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.1 -J shoulder_pan_joint 0.0 -J shoulder_lift_joint -1.57 -J elbow_joint 1.57 -J wrist_1_joint -1.57 -J wrist_2_joint -1.57 -J wrist_3_joint 0.0" respawn="false" output="screen" />

    <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

    <rosparam file="$(find etasl_ros_control_examples)/config/hardware_controllers_ur.yaml" command="load" subst_value="true"/>
    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="etasl_controller"/>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find industrial_robot_client)/config/robot_state_visualize.rviz" required="true" />

    <node name="target_publisher" pkg="etasl_ros_control_examples" type="target_publisher.py" required="true"/>
</launch>